---
import SectionContainer from "@components/SectionContainer.astro";
import type { PostCategory, ProjectsSection } from "@types";
import ProjectCard from "./ProjectCard.astro";
interface Props {
  projects: ProjectsSection;
}

const { projects: obras } = Astro.props;

const categorias: PostCategory[] = obras.flatMap(
  (obra) => obra.categorias ?? []
);

const uniqueCategorias: PostCategory[] = categorias.reduce((acc, cat) => {
  if (!acc.some((existingCat) => existingCat.term_id === cat.term_id)) {
    acc.push(cat);
  }
  return acc;
}, [] as PostCategory[]);
---

<SectionContainer id="projects" class="projects">
  <div class="section-header">
    <h2>Nuestras Obras</h2>
    <p>
      Te presentamos algunos de nuestros proyectos destacados que demuestran
      nuestra experiencia y calidad en el sector.
    </p>
  </div>

  <div class="portfolio-isotope">
    <ul class="portfolio-flters">
      <li data-filter="*" class="filter-active">Todo</li>
      {
        uniqueCategorias.map((cat) => (
          <li data-filter={`.filter-${cat.slug}`}>{cat.name}</li>
        ))
      }
    </ul>

    <div class="row gy-4 portfolio-container">
      {obras && obras.map((obra) => <ProjectCard project={obra} />)}
    </div>
  </div>
</SectionContainer>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    "use strict";

    /**
     * Initiate glightbox for image previews
     */
    const glightbox = GLightbox({
      selector: ".glightbox",
    });

    /**
     * Portfolio isotope and filter
     */
    let portfolionIsotope = document.querySelector(".portfolio-isotope");
    console.log(portfolionIsotope);
    if (portfolionIsotope) {
      let portfolioFilter =
        portfolionIsotope.getAttribute("data-portfolio-filter") || "*";
      let portfolioLayout =
        portfolionIsotope.getAttribute("data-portfolio-layout") || "masonry";
      let portfolioSort =
        portfolionIsotope.getAttribute("data-portfolio-sort") ||
        "original-order";

      window.addEventListener("load", () => {
        let portfolioIsotope = new Isotope(
          document.querySelector(".portfolio-container"),
          {
            itemSelector: ".portfolio-item",
            layoutMode: portfolioLayout,
            filter: portfolioFilter,
            sortBy: portfolioSort,
          }
        );

        let menuFilters = document.querySelectorAll(
          ".portfolio-isotope .portfolio-flters li"
        );
        menuFilters.forEach(function (el) {
          el.addEventListener("click", function () {
            document
              .querySelector(
                ".portfolio-isotope .portfolio-flters .filter-active"
              )
              .classList.remove("filter-active");
            this.classList.add("filter-active");
            portfolioIsotope.arrange({
              filter: this.getAttribute("data-filter"),
            });
          });
        });
      });
    }
  });
</script>
